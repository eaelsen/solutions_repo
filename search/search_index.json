{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 \ud83c\udfaf Problem 1: Investigating the Range as a Function of the Angle of Projection \ud83d\udd0d Motivation Projectile motion offers a rich opportunity to explore fundamental physics. Understanding how range varies with angle helps explain trajectories in sports, engineering, and even space exploration. 1. \ud83d\udcd8 Theoretical Foundation We begin with the kinematic equations of motion: Horizontal motion (constant velocity): $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical motion (accelerated): $$ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 $$ To find range \\(R\\) , solve for time of flight \\(T\\) when \\(y(T) = 0\\) : \\[ T = \\frac{2v_0 \\sin(\\theta)}{g} \\] Substitute into \\(x(T)\\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This shows range depends on the sine of double the angle. Peak range occurs at \\(\\theta = 45^\\circ\\) . \ud83d\udd04 Family of Solutions Different values of: \\(v_0\\) : initial velocity \\(g\\) : gravitational acceleration \\(\\theta\\) : launch angle ... yield different trajectories and ranges. 2. \ud83d\udcca Analysis of the Range Let\u2019s examine the effect of: Angle: \\(\\theta\\) in [0\u00b0, 90\u00b0] \\(v_0 =\\) constant values \\(g = 9.81\\,m/s^2\\) We'll plot \\(R(\\theta)\\) for different \\(v_0\\) . 3. \ud83c\udf0d Practical Applications Uneven terrain: introduces asymmetric time of flight. Air resistance: breaks ideal symmetry; reduces range. Launch height \u2260 0: requires full quadratic solution for \\(y(t) = 0\\) 4. \ud83d\udcbb Implementation (Python Code) import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # m/s\u00b2 angles = np.linspace(0, 90, 500) # degrees angles_rad = np.radians(angles) # Test different velocities velocities = [10, 20, 30] # m/s plt.figure(figsize=(10, 6)) for v0 in velocities: R = (v0 ** 2) * np.sin(2 * angles_rad) / g plt.plot(angles, R, label=f'v0 = {v0} m/s') plt.title(\"Projectile Range vs Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.legend() plt.grid(True) plt.show() \ud83d\udcc8 Graphical Insights The graphs will show: Symmetric curve peaking at 45\u00b0 Higher initial velocity \u2192 longer range Sensitivity to angle increases with speed \u26a0\ufe0f Limitations and Real-World Factors Air drag : can reduce range significantly Launch height : modifies time of flight Wind and spin : introduce lift or drag effects Non-constant gravity (e.g., rocket dynamics) \ud83d\udca1 Future Improvements Include drag force: \\(F_d = -kv^2\\) Vary \\(g\\) (e.g., Moon, Mars simulations) Add terrain modeling","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1-investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"\ud83c\udfaf Problem 1: Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion offers a rich opportunity to explore fundamental physics. Understanding how range varies with angle helps explain trajectories in sports, engineering, and even space exploration.","title":"\ud83d\udd0d Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"We begin with the kinematic equations of motion: Horizontal motion (constant velocity): $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical motion (accelerated): $$ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 $$ To find range \\(R\\) , solve for time of flight \\(T\\) when \\(y(T) = 0\\) : \\[ T = \\frac{2v_0 \\sin(\\theta)}{g} \\] Substitute into \\(x(T)\\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This shows range depends on the sine of double the angle. Peak range occurs at \\(\\theta = 45^\\circ\\) .","title":"1. \ud83d\udcd8 Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#family-of-solutions","text":"Different values of: \\(v_0\\) : initial velocity \\(g\\) : gravitational acceleration \\(\\theta\\) : launch angle ... yield different trajectories and ranges.","title":"\ud83d\udd04 Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"Let\u2019s examine the effect of: Angle: \\(\\theta\\) in [0\u00b0, 90\u00b0] \\(v_0 =\\) constant values \\(g = 9.81\\,m/s^2\\) We'll plot \\(R(\\theta)\\) for different \\(v_0\\) .","title":"2. \ud83d\udcca Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Uneven terrain: introduces asymmetric time of flight. Air resistance: breaks ideal symmetry; reduces range. Launch height \u2260 0: requires full quadratic solution for \\(y(t) = 0\\)","title":"3. \ud83c\udf0d Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-python-code","text":"import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # m/s\u00b2 angles = np.linspace(0, 90, 500) # degrees angles_rad = np.radians(angles) # Test different velocities velocities = [10, 20, 30] # m/s plt.figure(figsize=(10, 6)) for v0 in velocities: R = (v0 ** 2) * np.sin(2 * angles_rad) / g plt.plot(angles, R, label=f'v0 = {v0} m/s') plt.title(\"Projectile Range vs Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.legend() plt.grid(True) plt.show()","title":"4. \ud83d\udcbb Implementation (Python Code)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graphical-insights","text":"The graphs will show: Symmetric curve peaking at 45\u00b0 Higher initial velocity \u2192 longer range Sensitivity to angle increases with speed","title":"\ud83d\udcc8 Graphical Insights"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations-and-real-world-factors","text":"Air drag : can reduce range significantly Launch height : modifies time of flight Wind and spin : introduce lift or drag effects Non-constant gravity (e.g., rocket dynamics)","title":"\u26a0\ufe0f Limitations and Real-World Factors"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#future-improvements","text":"Include drag force: \\(F_d = -kv^2\\) Vary \\(g\\) (e.g., Moon, Mars simulations) Add terrain modeling","title":"\ud83d\udca1 Future Improvements"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 \ud83c\udf00 Problem 2: Investigating the Dynamics of a Forced Damped Pendulum \ud83e\udded Motivation The forced damped pendulum showcases the interplay between damping, restoring forces, and external driving. It offers insight into linear vs. nonlinear behavior, including resonance and chaotic dynamics\u2014key phenomena in real-world systems like circuits, bridges, and biomechanics. 1. \ud83d\udcd8 Theoretical Foundation General Equation of Motion: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: \\(\\theta\\) : angular displacement \\(\\gamma\\) : damping coefficient \\(\\omega_0\\) : natural frequency \\((\\sqrt{g/L})\\) \\(A\\) : amplitude of the external force \\(\\omega\\) : driving frequency Small-Angle Approximation: For small \\(\\theta\\) , \\(\\sin\\theta \\approx \\theta\\) , giving: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a linear second-order ODE with periodic forcing. Solutions can exhibit: Underdamping Resonance (when \\(\\omega \\approx \\omega_0\\) ) Steady-state oscillation 2. \ud83d\udcca Analysis of Dynamics We explore: Effects of increasing \\(\\gamma\\) : faster decay, less oscillation. Varying \\(A\\) : transition from linear to nonlinear behavior. Tuning \\(\\omega\\) : resonance effects and bifurcations. Chaos: Numerical solutions (no small-angle approx) show: Regular behavior (periodic or quasiperiodic) Chaotic behavior (sensitive dependence on initial conditions) 3. \ud83c\udf0d Practical Applications RLC circuits (analogous to the pendulum) Human gait dynamics Bridge design (e.g., Tacoma Narrows Bridge collapse) Energy harvesters using periodic mechanical motion 4. \ud83d\udcbb Implementation (Python Code) import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters gamma = 0.2 # damping coefficient omega0 = 1.5 # natural frequency A = 1.2 # forcing amplitude omega_d = 2/3 # driving frequency def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_d * t) return [dtheta_dt, domega_dt] # Initial conditions y0 = [0.2, 0.0] t_eval = np.linspace(0, 100, 10000) # Solve ODE sol = solve_ivp(pendulum, [0, 100], y0, t_eval=t_eval) # Plot plt.figure(figsize=(10, 4)) plt.plot(sol.t, sol.y[0]) plt.title(\"Forced Damped Pendulum Motion\") plt.xlabel(\"Time\") plt.ylabel(\"Theta (rad)\") plt.grid(True) plt.show() \ud83d\udd01 Phase Space and Poincar\u00e9 Section # Phase portrait plt.figure() plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title(\"Phase Space: \u03b8 vs \u03c9\") plt.xlabel(\"Theta\") plt.ylabel(\"Angular Velocity\") plt.grid(True) plt.show() # Poincar\u00e9 section (sample once every drive period) T_drive = 2 * np.pi / omega_d indices = np.arange(int(T_drive / (t_eval[1]-t_eval[0])), len(t_eval), int(T_drive / (t_eval[1]-t_eval[0]))) plt.figure() plt.plot(sol.y[0][indices], sol.y[1][indices], 'o', markersize=1) plt.title(\"Poincar\u00e9 Section\") plt.xlabel(\"Theta\") plt.ylabel(\"Angular Velocity\") plt.grid(True) plt.show() \ud83e\udde0 Discussion & Limitations Limitations: Small-angle approximation fails at large amplitudes. Ignores frictional forces with different damping profiles. Assumes perfectly periodic driving force. Extensions: Nonlinear damping: \\(\\propto |\\omega|\\omega\\) Stochastic or aperiodic driving force Double pendulum for richer chaos","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2-investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"\ud83c\udf00 Problem 2: Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum showcases the interplay between damping, restoring forces, and external driving. It offers insight into linear vs. nonlinear behavior, including resonance and chaotic dynamics\u2014key phenomena in real-world systems like circuits, bridges, and biomechanics.","title":"\ud83e\udded Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. \ud83d\udcd8 Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#general-equation-of-motion","text":"\\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: \\(\\theta\\) : angular displacement \\(\\gamma\\) : damping coefficient \\(\\omega_0\\) : natural frequency \\((\\sqrt{g/L})\\) \\(A\\) : amplitude of the external force \\(\\omega\\) : driving frequency","title":"General Equation of Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small \\(\\theta\\) , \\(\\sin\\theta \\approx \\theta\\) , giving: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a linear second-order ODE with periodic forcing. Solutions can exhibit: Underdamping Resonance (when \\(\\omega \\approx \\omega_0\\) ) Steady-state oscillation","title":"Small-Angle Approximation:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"We explore: Effects of increasing \\(\\gamma\\) : faster decay, less oscillation. Varying \\(A\\) : transition from linear to nonlinear behavior. Tuning \\(\\omega\\) : resonance effects and bifurcations.","title":"2. \ud83d\udcca Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#chaos","text":"Numerical solutions (no small-angle approx) show: Regular behavior (periodic or quasiperiodic) Chaotic behavior (sensitive dependence on initial conditions)","title":"Chaos:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"RLC circuits (analogous to the pendulum) Human gait dynamics Bridge design (e.g., Tacoma Narrows Bridge collapse) Energy harvesters using periodic mechanical motion","title":"3. \ud83c\udf0d Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation-python-code","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters gamma = 0.2 # damping coefficient omega0 = 1.5 # natural frequency A = 1.2 # forcing amplitude omega_d = 2/3 # driving frequency def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_d * t) return [dtheta_dt, domega_dt] # Initial conditions y0 = [0.2, 0.0] t_eval = np.linspace(0, 100, 10000) # Solve ODE sol = solve_ivp(pendulum, [0, 100], y0, t_eval=t_eval) # Plot plt.figure(figsize=(10, 4)) plt.plot(sol.t, sol.y[0]) plt.title(\"Forced Damped Pendulum Motion\") plt.xlabel(\"Time\") plt.ylabel(\"Theta (rad)\") plt.grid(True) plt.show()","title":"4. \ud83d\udcbb Implementation (Python Code)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-space-and-poincare-section","text":"# Phase portrait plt.figure() plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title(\"Phase Space: \u03b8 vs \u03c9\") plt.xlabel(\"Theta\") plt.ylabel(\"Angular Velocity\") plt.grid(True) plt.show() # Poincar\u00e9 section (sample once every drive period) T_drive = 2 * np.pi / omega_d indices = np.arange(int(T_drive / (t_eval[1]-t_eval[0])), len(t_eval), int(T_drive / (t_eval[1]-t_eval[0]))) plt.figure() plt.plot(sol.y[0][indices], sol.y[1][indices], 'o', markersize=1) plt.title(\"Poincar\u00e9 Section\") plt.xlabel(\"Theta\") plt.ylabel(\"Angular Velocity\") plt.grid(True) plt.show()","title":"\ud83d\udd01 Phase Space and Poincar\u00e9 Section"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#discussion-limitations","text":"","title":"\ud83e\udde0 Discussion &amp; Limitations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#limitations","text":"Small-angle approximation fails at large amplitudes. Ignores frictional forces with different damping profiles. Assumes perfectly periodic driving force.","title":"Limitations:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#extensions","text":"Nonlinear damping: \\(\\propto |\\omega|\\omega\\) Stochastic or aperiodic driving force Double pendulum for richer chaos","title":"Extensions:"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 \ud83c\udf0d Problem 1: Orbital Period and Orbital Radius \ud83d\ude80 Motivation Kepler\u2019s Third Law reveals a deep connection between time and space in orbital mechanics: the square of a planet's orbital period is proportional to the cube of its orbital radius. This law forms a bridge between observation and Newtonian gravitation, enabling predictions of satellite behavior, moon motion, and planetary distances. 1. \ud83d\udcd8 Theoretical Foundation Newton\u2019s Law of Gravitation: \\[ F = \\frac{GMm}{r^2} \\] Centripetal Force for Circular Motion: \\[ F = \\frac{mv^2}{r} \\] Equating the two: \\[ \\frac{GMm}{r^2} = \\frac{mv^2}{r} \\] \\[ v = \\sqrt{\\frac{GM}{r}} \\] Period \\(T\\) is the time to complete one orbit: \\[ T = \\frac{2\\pi r}{v} = 2\\pi r \\sqrt{\\frac{r}{GM}} = 2\\pi \\sqrt{\\frac{r^3}{GM}} \\] Final Form of Kepler's Third Law: \\[ T^2 \\propto r^3 \\] 2. \ud83e\udde0 Implications for Astronomy Allows estimation of planetary masses and orbital distances . Explains consistent behavior across moons, planets, and satellites. Groundwork for Newton\u2019s universal law of gravitation. 3. \ud83c\udf0d Real-World Examples Example 1: The Moon around Earth Radius: \\(r \\approx 384,400\\) km Period: \\(T \\approx 27.3\\) days Use to verify \\(T^2 \\propto r^3\\) Example 2: Planets in the Solar System Compare \\(\\frac{T^2}{r^3}\\) across planets\u2014should be nearly constant. 4. \ud83d\udcbb Python Simulation and Verification import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant (m^3/kg/s^2) M = 1.989e30 # mass of the Sun (kg) # Orbital radii (m) and periods (s) of planets planet_data = { 'Mercury': (5.79e10, 7.60e6), 'Venus': (1.08e11, 1.94e7), 'Earth': (1.50e11, 3.15e7), 'Mars': (2.28e11, 5.94e7), 'Jupiter': (7.78e11, 3.74e8), 'Saturn': (1.43e12, 9.29e8) } # Calculate T^2 and R^3 radii = [] t_squared = [] r_cubed = [] for planet, (r, T) in planet_data.items(): radii.append(r) t_squared.append(T**2) r_cubed.append(r**3) # Plot plt.figure(figsize=(8, 6)) plt.loglog(r_cubed, t_squared, 'o-') plt.xlabel(\"Orbital Radius\u00b3 (m\u00b3)\") plt.ylabel(\"Orbital Period\u00b2 (s\u00b2)\") plt.title(\"Verification of Kepler's Third Law\") plt.grid(True) plt.show() \ud83d\udcc8 Visualization Log-log plot of \\(T^2\\) vs \\(r^3\\) should yield a straight line. Confirms that \\(T^2 \\propto r^3\\) for all major planets. \ud83d\udcc9 Beyond Circular Orbits For elliptical orbits, Kepler\u2019s Third Law still holds with: $$ T^2 = \\frac{4\\pi^2 a^3}{GM} $$ where \\(a\\) is the semi-major axis. * Used in binary star systems, exoplanets, and orbital transfer calculations.","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1-orbital-period-and-orbital-radius","text":"","title":"\ud83c\udf0d Problem 1: Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation","text":"Kepler\u2019s Third Law reveals a deep connection between time and space in orbital mechanics: the square of a planet's orbital period is proportional to the cube of its orbital radius. This law forms a bridge between observation and Newtonian gravitation, enabling predictions of satellite behavior, moon motion, and planetary distances.","title":"\ud83d\ude80 Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-theoretical-foundation","text":"","title":"1. \ud83d\udcd8 Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#newtons-law-of-gravitation","text":"\\[ F = \\frac{GMm}{r^2} \\]","title":"Newton\u2019s Law of Gravitation:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#centripetal-force-for-circular-motion","text":"\\[ F = \\frac{mv^2}{r} \\] Equating the two: \\[ \\frac{GMm}{r^2} = \\frac{mv^2}{r} \\] \\[ v = \\sqrt{\\frac{GM}{r}} \\] Period \\(T\\) is the time to complete one orbit: \\[ T = \\frac{2\\pi r}{v} = 2\\pi r \\sqrt{\\frac{r}{GM}} = 2\\pi \\sqrt{\\frac{r^3}{GM}} \\]","title":"Centripetal Force for Circular Motion:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#final-form-of-keplers-third-law","text":"\\[ T^2 \\propto r^3 \\]","title":"Final Form of Kepler's Third Law:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-implications-for-astronomy","text":"Allows estimation of planetary masses and orbital distances . Explains consistent behavior across moons, planets, and satellites. Groundwork for Newton\u2019s universal law of gravitation.","title":"2. \ud83e\udde0 Implications for Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-real-world-examples","text":"","title":"3. \ud83c\udf0d Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#example-1-the-moon-around-earth","text":"Radius: \\(r \\approx 384,400\\) km Period: \\(T \\approx 27.3\\) days Use to verify \\(T^2 \\propto r^3\\)","title":"Example 1: The Moon around Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#example-2-planets-in-the-solar-system","text":"Compare \\(\\frac{T^2}{r^3}\\) across planets\u2014should be nearly constant.","title":"Example 2: Planets in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-python-simulation-and-verification","text":"import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant (m^3/kg/s^2) M = 1.989e30 # mass of the Sun (kg) # Orbital radii (m) and periods (s) of planets planet_data = { 'Mercury': (5.79e10, 7.60e6), 'Venus': (1.08e11, 1.94e7), 'Earth': (1.50e11, 3.15e7), 'Mars': (2.28e11, 5.94e7), 'Jupiter': (7.78e11, 3.74e8), 'Saturn': (1.43e12, 9.29e8) } # Calculate T^2 and R^3 radii = [] t_squared = [] r_cubed = [] for planet, (r, T) in planet_data.items(): radii.append(r) t_squared.append(T**2) r_cubed.append(r**3) # Plot plt.figure(figsize=(8, 6)) plt.loglog(r_cubed, t_squared, 'o-') plt.xlabel(\"Orbital Radius\u00b3 (m\u00b3)\") plt.ylabel(\"Orbital Period\u00b2 (s\u00b2)\") plt.title(\"Verification of Kepler's Third Law\") plt.grid(True) plt.show()","title":"4. \ud83d\udcbb Python Simulation and Verification"},{"location":"1%20Physics/2%20Gravity/Problem_1/#visualization","text":"Log-log plot of \\(T^2\\) vs \\(r^3\\) should yield a straight line. Confirms that \\(T^2 \\propto r^3\\) for all major planets.","title":"\ud83d\udcc8 Visualization"},{"location":"1%20Physics/2%20Gravity/Problem_1/#beyond-circular-orbits","text":"For elliptical orbits, Kepler\u2019s Third Law still holds with: $$ T^2 = \\frac{4\\pi^2 a^3}{GM} $$ where \\(a\\) is the semi-major axis. * Used in binary star systems, exoplanets, and orbital transfer calculations.","title":"\ud83d\udcc9 Beyond Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}